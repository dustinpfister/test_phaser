// the main game variable
var game = new Phaser.Game(320, 240, Phaser.AUTO, 'gamearea');

game.global = {

    block_pool_size: 12

};

game.state.add('boot', {

    create: function () {

        // sprite sheet generated by canvas
        var canvas = document.createElement('canvas'),
        ctx = canvas.getContext('2d');
        canvas.width = 32;
        canvas.height = 32;

        ctx.fillStyle = '#0000ff';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        game.cache.addSpriteSheet('sheet-block', null, canvas, 32, 32, 1, 0, 0);

        game.state.start('game');

    }

});

game.state.add('game', {

    create: function () {

        var i = 0,
        len = game.global.block_pool_size,
        sprite;
        while (i < len) {

            sprite = game.add.sprite(-32, -32, 'sheet-block', 0);
            sprite.name = 'block-' + i;

            sprite.data = {

                state: 'inactive',
                heading: 0,
                dx: 1,
                dy: 0,
                hp: 1,
                delta: new Phaser.Point(0, 0)

            };

            i += 1;

        }

    },

    update: function () {

        var i = 0,
        len = game.global.block_pool_size,
        a,
        sprite;

        // loop all blocks
        while (i < len) {

            sprite = game.world.getByName('block-' + i);

            // if not active
            if (sprite.data.state === 'inactive') {

                sprite.data.state = 'inbound';
                a = Math.PI * 2 * Math.random();

                var spawnPt = new Phaser.Point(
                        Math.cos(a) * (game.world.width) + game.world.centerX - sprite.width / 2,
                        Math.sin(a) * (game.world.height) + game.world.centerY - sprite.height / 2);

                sprite.x = spawnPt.x;
                sprite.y = spawnPt.y;

                sprite.data.heading = spawnPt.angle(new Phaser.Point(game.world.centerX, game.world.centerY));
                sprite.data.dx = Math.cos(sprite.data.heading);
                sprite.data.dy = Math.sin(sprite.data.heading);

            }

            if (sprite.data.state == 'inbound') {

                sprite.x += sprite.data.dx;
                sprite.y += sprite.data.dy;

                var d = new Phaser.Point(game.world.centerX, game.world.centerY).distance(sprite);

                if (d < 100) {

                    sprite.data.state = 'active';

                }

            }

            // if active
            if (sprite.data.state == 'active') {

                sprite.x += sprite.data.dx;
                sprite.y += sprite.data.dy;

                // make sure block is in the game area
                sprite.x = Phaser.Math.wrap(sprite.x, -32, game.world.width + 32);
                sprite.y = Phaser.Math.wrap(sprite.y, -32, game.world.height + 32);

            }

            i += 1;
        }

    }

});

game.state.start('boot');
