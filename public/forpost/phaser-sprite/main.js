
var mkBlockSheet = function () {

    // sprite sheet generated by canvas
    var canvas = document.createElement('canvas'),
    ctx = canvas.getContext('2d');
    canvas.width = 64;
    canvas.height = 32;

    // blue block
    ctx.fillStyle = '#0000ff';
    ctx.fillRect(0, 0, 32, 32);

    game.cache.addSpriteSheet('sheet-block', null, canvas, 32, 32, 1, 0, 0);

};

var game = new Phaser.Game(320, 240, Phaser.AUTO, 'gamearea');

// basic example
game.state.add('example1', {

    create: function () {

        mkBlockSheet(game);

        var sprite = game.add.sprite(32, 32, 'sheet-block');

    }

});

// enabling physics
game.state.add('example2', {

    create: function () {

        mkBlockSheet(game);

        var sprite = game.add.sprite(32, 32, 'sheet-block');

        // enabling physics
        game.physics.enable(sprite);

        // set some gravity, and bounce
        sprite.body.gravity.set(0, 100);
        sprite.body.bounce.set(1, 1);

        // collide with wourld bounds
        sprite.body.collideWorldBounds = true;

    }

});

// data objects
game.state.add('example3', {

    create: function () {

        mkBlockSheet(game);

        var sprite = game.add.sprite(32, 32, 'sheet-block');

        sprite.name = 'block';
        sprite.data.pps = 128;

    },

    update: function () {

        var sprite = game.world.getByName('block');

        // move the sprite by per pixel rate
        sprite.x += game.time.elapsed / 1000 * sprite.data.pps;

        // wrap sprite when it goes out of bounds
        sprite.x = Phaser.Math.wrap(sprite.x, -32, game.world.width + 32);

    }

});

game.state.start('example3');
