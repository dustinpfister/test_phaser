
var createOnGameOver = function (game) {

    // create an signal
    var onGameOver = game.data.onGameOver = new Phaser.Signal();

    // append a handler
    onGameOver.add(function () {

        // display game over
        game.data.disp.text = 'Game Over';

        console.log('game over');

    });

};

var onPlayerOutBounds = function (game) {

    var player = game.data.player;

    // out of bounds signal
    player.checkWorldBounds = true;
    player.events.onOutOfBounds.add(function () {

        player.body.velocity.set(0, 0);
        player.x = 0;
        player.y = 0;
        player.damage(50);

        game.data.disp.text = 'health: ' + player.health;

        if (player.health <= 0) {

            player.health = 0;

            // call Signal.dispatch to fire the event
            game.data.onGameOver.dispatch(player);

        }

    });

};

// make the player sprite
var mkPlayerSprite = function (game) {

    var player = game.data.player = game.add.sprite(0, 0, 'sheet-block', 0);

    player.health = 100;

    game.data.disp.text = 'health: ' + player.health;

    game.physics.enable(player);
    player.body.gravity.set(0, 100);

};

// make a sprite sheet
var mkSheet = function (game) {

    // sprite sheet generated by canvas
    var canvas = document.createElement('canvas'),
    ctx = canvas.getContext('2d');
    canvas.width = 96;
    canvas.height = 32;

    // blue box (player)
    ctx.fillStyle = '#0000ff';
    ctx.fillRect(0, 0, 32, 32);

    game.cache.addSpriteSheet('sheet-block', null, canvas, 32, 32, 3, 0, 0);

};

var game = new Phaser.Game(320, 240, Phaser.AUTO, 'gamearea');

game.state.add('game', {

    create: function () {

        // game data object to store game variables
        game.data = {};

        // text display object
        var disp = game.data.disp = game.add.text(10, 10, '', {
                fill: 'white',
                font: '15px courier'
            });

        // will be using physics
        game.physics.startSystem(Phaser.Physics.ARCADE);

        // make a sprite sheet
        mkSheet(game);

        // create on game over signal
        createOnGameOver(game);

        // make player sprite
        mkPlayerSprite(game);

        // on player out of bounds
        onPlayerOutBounds(game);

    }

});

game.state.start('game');
