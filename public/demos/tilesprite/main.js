
var mkSheet = function () {

    // sprite sheet generated by canvas
    var canvas = document.createElement('canvas'),
    ctx = canvas.getContext('2d');
    canvas.width = 32;
    canvas.height = 32;

    // green frame
    ctx.fillStyle = '#008a00';
    ctx.fillRect(0, 0, 32, 32);

    // large circle in the center
    ctx.fillStyle = '#000000';
    ctx.strokeStyle = '#ffffff';
    ctx.beginPath()
    ctx.arc(16, 16, 8, 0, Math.PI * 2)
    ctx.fill();
    ctx.stroke();

    // small circles at the corners
    var i = 0,
    x,
    y;
    while (i < 4) {

        x = i % 2;
        y = Math.floor(i / 2);

        ctx.beginPath()
        ctx.arc(x * 32, y * 32, 4, 0, Math.PI * 2)
        ctx.fill();
        ctx.stroke();
        i += 1;
    }

    game.cache.addSpriteSheet('sheet-block', null, canvas, 32, 32, 1, 0, 0);

};

var game = new Phaser.Game(320, 240, Phaser.AUTO, 'gamearea');

game.state.add('boot', {

    create: function () {

        mkSheet(game);

        var tile = game.add.tileSprite(0, 0, game.world.width, game.world.height, 'sheet-block', 0);
        tile.name = 'tile';

        tile.data.i = 0;
        tile.data.i_max = 150;
        tile.data.tick = function () {

            this.per = this.i / this.i_max;
            //this.bias = 1 - Math.abs(0.5 - this.per) / 0.5;

            this.r = Math.PI * 2 * this.per;
            this.x = Math.cos(this.r) * 64;
            this.y = Math.sin(this.r) * 64;

            this.i += 1;
            this.i %= this.i_max;

        };

    },

    update: function () {

        var tile = game.world.getByName('tile');

        tile.tilePosition.set(tile.data.x, tile.data.y);

        tile.data.tick();

    }

});

game.state.start('boot');
